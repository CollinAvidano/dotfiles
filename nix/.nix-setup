#export DEBUGINFOD_URLS=http://10.14.252.75:1949
export DEBUGINFOD_URLS=http://127.0.0.1:1949

#export NIX_SSHOPTS="PATH=\$PATH:\$HOME/.nix-profile/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"

SCRIPT_DIR=$(dirname "$(readlink -f "$0")")


tsh ls type=nixos-remote-builder-ear
export NIX_PATH="$NIX_PATH:anixpkgs=$HOME/projects/anduril-nixpkgs"

alias nixbuild="nix build -L -vvv --show-trace "
alias nix-repl="nix repl --extra-experimental-features 'flakes repl-flake'"
alias nix-develop="nix develop --impure -c /bin/zsh"


install-remote () {(
    # in subshell
    set -e
    echo "package names should be x86_64-linux, aarch64-multiplatform, or armv7l-hf-multiplatform"
    nix_store=$(nix build $2 --no-link --print-out-paths)
    echo "copy closuring"
    nix-copy-closure --to $1 "$nix_store" || echo "nothing to copy"
    echo "installing on remote"
    ssh $1 "export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin; if [ -e /home/slroot/.nix-profile/etc/profile.d/nix.sh ]; then . /home/slroot/.nix-profile/etc/profile.d/nix.sh; fi; nix-env -i $nix_store || nix profile install $nix_store"
    echo "done"
)}

alias screen-jetson="\sudo screen -L /dev/ttyUSB0 115200"

quick-installer() {
    set -x
    HOST="$1"
    PASS="$2"
    BUILDSTRING="$3" # must include --system and or the -j commands will just be appended by nix build and --print-out-paths
    NIX_STORE=$(nix build ${BUILDSTRING} --print-out-paths)
    nix copy --to ssh://${HOST} ${NIX_STORE}
    ssh ${HOST} "bash -s" < ${SCRIPT_DIR}/quick.sh "${NIX_STORE} ${PASS}"
}

quick-flasher () {
    # only reiterated to reinforce build order could just be an alias
    HOST="areai@flasher.local"
    PASS="areai"
    BUILDSTRING="--system 'aarch64-linux' .#jetson-flash-server.config.system.build.toplevel -j0"
    quick-installer ${HOST} ${PASS} ${BUILDSTRING}
}

quick-autonomy () {
    HOST="anduril@autonomy.local"
    PASS="anduril1"
    BUILDSTRING="-L -vvv --show-trace --system 'aarch64-linux' .#altius-mk6-autonomy-orin-nx.config.system.build.toplevel -j0 --no-link"
    quick-installer ${HOST} ${PASS} ${BUILDSTRING}
}


quick2 () {
    installer_path="${2:-embeddedInstaller--nix-v2.12.0-project-tag-test-tag-11.sh}"
    installer="$(basename ${installer_path})"
    #scp ${installer_path} slroot@$1:./ && ssh slroot@$1 "export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin && chmod +x ./${installer} && ./${installer} && readlink /runtime/* && sleep 5 && sudo systemctl status bird-watcher"
    scp ${installer_path} slroot@$1:./ && ssh slroot@$1 "export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin && chmod +x ./${installer}"
}

alias snow=nix

remove_nix () {
    echo "Removing Nix (will ask for sudo access)"
    sudo rm -rf /nix/
    # sudo rm -rf /etc/nix
    # sudo rm -rf ~/.nix-channels ~/.nix-defexpr ~/.nix-profile
    echo "Finished removing Nix"
}

